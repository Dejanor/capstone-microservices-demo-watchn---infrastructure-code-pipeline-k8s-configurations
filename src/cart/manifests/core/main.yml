#@ load("@ytt:data", "data")

apiVersion: apps/v1
kind: Deployment
metadata:
  name: carts
  labels:
    name: carts
  namespace: #@ data.values.namespace
spec:
  minReadySeconds: 5
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 180
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  #@ if/end not data.values.hpa.enabled:
  replicas: #@ data.values.cart.replicas
  selector:
    matchLabels:
      name: carts
  template:
    metadata:
      labels:
        name: carts
      #@ if data.values.metrics.prometheus.enabled:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8080'
        prometheus.io/path: '/actuator/prometheus'
      #@ end
    spec:
      containers:
      - name: carts
        image: #@ data.values.cart.image.build.id
        ports:
         - containerPort: 8080
        env:
          - name: JAVA_OPTS
            value: -XX:MaxRAMPercentage=75.0 -Djava.security.egd=file:/dev/urandom
          - name: SPRING_PROFILES_ACTIVE
            value: dynamodb
        resources:
          requests:
            memory: "1Gi"
          limits:
            memory: "1Gi"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 45
          periodSeconds: 3
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory

#@ if data.values.services.enabled:
---
apiVersion: v1
kind: Service
metadata:
  name: carts
  labels:
    name: carts
  namespace: #@ data.values.namespace
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    name: carts
#@ end