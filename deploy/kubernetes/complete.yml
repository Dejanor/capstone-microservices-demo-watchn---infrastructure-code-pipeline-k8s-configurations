---
apiVersion: v1
kind: Namespace
metadata:
  name: watchn
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Tag: 0.3.1
          Type: resolved
          URL: weaveworksdemos/queue-master:0.3.1
        URL: index.docker.io/weaveworksdemos/queue-master@sha256:6292d3095f4c7aeed8d863527f8ef6d7a75d3128f20fc61e57f398c100142712
  labels:
    name: queue-master
  name: queue-master
  namespace: watchn
spec:
  replicas: 1
  selector:
    matchLabels:
      name: queue-master
  template:
    metadata:
      labels:
        name: queue-master
    spec:
      containers:
      - image: index.docker.io/weaveworksdemos/queue-master@sha256:6292d3095f4c7aeed8d863527f8ef6d7a75d3128f20fc61e57f398c100142712
        name: queue-master
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/path: /prometheus
  labels:
    name: queue-master
  name: queue-master
  namespace: watchn
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    name: queue-master
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Tag: 3.6.8
          Type: resolved
          URL: rabbitmq:3.6.8
        URL: index.docker.io/library/rabbitmq@sha256:a9f4923559bbcd00b93b02e61615aef5eb6f1d1c98db51053bab0fa6b680db26
  labels:
    name: rabbitmq
  name: rabbitmq
  namespace: watchn
spec:
  replicas: 1
  selector:
    matchLabels:
      name: rabbitmq
  template:
    metadata:
      labels:
        name: rabbitmq
    spec:
      containers:
      - image: index.docker.io/library/rabbitmq@sha256:a9f4923559bbcd00b93b02e61615aef5eb6f1d1c98db51053bab0fa6b680db26
        name: rabbitmq
        ports:
        - containerPort: 5672
        securityContext:
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            - DAC_OVERRIDE
            drop:
            - all
          readOnlyRootFilesystem: true
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: rabbitmq
  name: rabbitmq
  namespace: watchn
spec:
  ports:
  - port: 5672
    targetPort: 5672
  selector:
    name: rabbitmq
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Tag: 0.4.8
          Type: resolved
          URL: weaveworksdemos/shipping:0.4.8
        URL: index.docker.io/weaveworksdemos/shipping@sha256:983305c948fded487f4a4acdeab5f898e89d577b4bc1ca3de7750076469ccad4
  labels:
    name: shipping
  name: shipping
  namespace: watchn
spec:
  replicas: 1
  selector:
    matchLabels:
      name: shipping
  template:
    metadata:
      labels:
        name: shipping
    spec:
      containers:
      - env:
        - name: ZIPKIN
          value: zipkin.jaeger.svc.cluster.local
        - name: JAVA_OPTS
          value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC
            -Djava.security.egd=file:/dev/urandom
        image: index.docker.io/weaveworksdemos/shipping@sha256:983305c948fded487f4a4acdeab5f898e89d577b4bc1ca3de7750076469ccad4
        name: shipping
        ports:
        - containerPort: 80
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10001
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
      - emptyDir:
          medium: Memory
        name: tmp-volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: shipping
  name: shipping
  namespace: watchn
spec:
  ports:
  - port: 8080
    targetPort: 80
  selector:
    name: shipping
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    kubernetes.io/ingress.class: alb
  labels:
    name: front-end
  name: front-end
  namespace: watchn
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: front-end
          servicePort: 80
        path: /*
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Tag: latest
          Type: resolved
          URL: mongo
        URL: index.docker.io/library/mongo@sha256:29805e9a6fc2a233b9b633c7b0f382a43df3f119522b82366a72abecb302a793
  labels:
    name: carts-db
  name: carts-db
  namespace: watchn
spec:
  replicas: 1
  selector:
    matchLabels:
      name: carts-db
  template:
    metadata:
      labels:
        name: carts-db
    spec:
      containers:
      - image: index.docker.io/library/mongo@sha256:29805e9a6fc2a233b9b633c7b0f382a43df3f119522b82366a72abecb302a793
        name: carts-db
        ports:
        - containerPort: 27017
          name: mongo
        securityContext:
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
      - emptyDir:
          medium: Memory
        name: tmp-volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: carts-db
  name: carts-db
  namespace: watchn
spec:
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    name: carts-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Type: preresolved
          URL: docker.io/niallthomson/shop-carts:0.0.2
        URL: docker.io/niallthomson/shop-carts:0.0.2
  labels:
    name: carts
  name: carts
  namespace: watchn
spec:
  replicas: 1
  selector:
    matchLabels:
      name: carts
  template:
    metadata:
      labels:
        fargate: "true"
        name: carts
    spec:
      containers:
      - env:
        - name: ZIPKIN
          value: zipkin.jaeger.svc.cluster.local
        - name: JAVA_OPTS
          value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC
            -Djava.security.egd=file:/dev/urandom
        image: docker.io/niallthomson/shop-carts:0.0.2
        name: carts
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: 512Mi
          requests:
            memory: 512Mi
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
      - emptyDir:
          medium: Memory
        name: tmp-volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: carts
  name: carts
  namespace: watchn
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    name: carts
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Tag: "5.7"
          Type: resolved
          URL: mysql:5.7
        URL: index.docker.io/library/mysql@sha256:32f9d9a069f7a735e28fd44ea944d53c61f990ba71460c5c183e610854ca4854
  labels:
    name: catalogue-db
  name: catalogue-db
  namespace: watchn
spec:
  replicas: 1
  selector:
    matchLabels:
      name: catalogue-db
  template:
    metadata:
      labels:
        name: catalogue-db
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: my-secret-pw
        - name: MYSQL_DATABASE
          value: watchndb
        - name: MYSQL_USER
          value: catalog_user
        - name: MYSQL_PASSWORD
          value: default_password
        image: index.docker.io/library/mysql@sha256:32f9d9a069f7a735e28fd44ea944d53c61f990ba71460c5c183e610854ca4854
        name: catalogue-db
        ports:
        - containerPort: 3306
          name: mysql
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: catalog-db
  name: catalog-db
  namespace: watchn
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    name: catalogue-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Type: preresolved
          URL: docker.io/niallthomson/shop-catalog:0.0.2
        URL: docker.io/niallthomson/shop-catalog:0.0.2
  labels:
    name: catalogue
  name: catalogue
  namespace: watchn
spec:
  replicas: 1
  selector:
    matchLabels:
      name: catalogue
  template:
    metadata:
      labels:
        fargate: "true"
        name: catalogue
    spec:
      containers:
      - image: docker.io/niallthomson/shop-catalog:0.0.2
        name: catalogue
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: catalogue
  name: catalogue
  namespace: watchn
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    name: catalogue
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Type: preresolved
          URL: docker.io/niallthomson/shop-ui:0.0.2
        URL: docker.io/niallthomson/shop-ui:0.0.2
  labels:
    name: ui
  name: ui
  namespace: watchn
spec:
  replicas: 1
  selector:
    matchLabels:
      name: ui
  template:
    metadata:
      labels:
        fargate: "true"
        name: ui
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC
            -Djava.security.egd=file:/dev/urandom
        image: docker.io/niallthomson/shop-ui:0.0.2
        name: ui
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: 512Mi
          requests:
            memory: 512Mi
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
      - emptyDir:
          medium: Memory
        name: tmp-volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: ui
  name: ui
  namespace: watchn
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    name: ui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Tag: latest
          Type: resolved
          URL: mongo
        URL: index.docker.io/library/mongo@sha256:29805e9a6fc2a233b9b633c7b0f382a43df3f119522b82366a72abecb302a793
  labels:
    name: orders-db
  name: orders-db
  namespace: watchn
spec:
  replicas: 1
  selector:
    matchLabels:
      name: orders-db
  template:
    metadata:
      labels:
        name: orders-db
    spec:
      containers:
      - image: index.docker.io/library/mongo@sha256:29805e9a6fc2a233b9b633c7b0f382a43df3f119522b82366a72abecb302a793
        name: orders-db
        ports:
        - containerPort: 27017
          name: mongo
        securityContext:
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
      - emptyDir:
          medium: Memory
        name: tmp-volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: orders-db
  name: orders-db
  namespace: watchn
spec:
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    name: orders-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Type: preresolved
          URL: docker.io/niallthomson/shop-orders:0.0.2
        URL: docker.io/niallthomson/shop-orders:0.0.2
  labels:
    name: orders
  name: orders
  namespace: watchn
spec:
  replicas: 1
  selector:
    matchLabels:
      name: orders
  template:
    metadata:
      labels:
        name: orders
    spec:
      containers:
      - env:
        - name: ZIPKIN
          value: zipkin.jaeger.svc.cluster.local
        - name: JAVA_OPTS
          value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC
            -Djava.security.egd=file:/dev/urandom
        image: docker.io/niallthomson/shop-orders:0.0.2
        name: orders
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
      - emptyDir:
          medium: Memory
        name: tmp-volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: orders
  name: orders
  namespace: watchn
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    name: orders
