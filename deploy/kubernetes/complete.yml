---
apiVersion: v1
kind: Namespace
metadata:
  name: watchn
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    kubernetes.io/ingress.class: alb
  labels:
    name: front-end
  name: front-end
  namespace: watchn
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: ui
          servicePort: 80
        path: /*
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Tag: 1.13.1
          Type: resolved
          URL: amazon/dynamodb-local:1.13.1
        URL: index.docker.io/amazon/dynamodb-local@sha256:648d5f0a5eb96b789040dcc56256a5b16a4097722327e7c8e1598daaa2fde385
  labels:
    name: carts-db
  name: carts-db
  namespace: watchn
spec:
  replicas: 1
  selector:
    matchLabels:
      name: carts-db
  template:
    metadata:
      labels:
        name: carts-db
    spec:
      containers:
      - image: index.docker.io/amazon/dynamodb-local@sha256:648d5f0a5eb96b789040dcc56256a5b16a4097722327e7c8e1598daaa2fde385
        name: carts-db
        ports:
        - containerPort: 8000
          name: dynamodb
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: carts-db
  name: carts-db
  namespace: watchn
spec:
  ports:
  - port: 8000
    targetPort: 8000
  selector:
    name: carts-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Type: preresolved
          URL: docker.io/niallthomson/shop-carts:v0.0.4
        URL: docker.io/niallthomson/shop-carts:v0.0.4
  labels:
    name: carts
  name: carts
  namespace: watchn
spec:
  replicas: 1
  selector:
    matchLabels:
      name: carts
  template:
    metadata:
      labels:
        fargate: "true"
        name: carts
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC
            -Djava.security.egd=file:/dev/urandom
        - name: SPRING_PROFILES_ACTIVE
          value: dynamodb
        - name: AMAZON_DYNAMODB_endpoint
          value: http://carts-db:8000
        - name: AWS_ACCESS_KEY_ID
          value: key
        - name: AWS_SECRET_ACCESS_KEY
          value: secret
        image: docker.io/niallthomson/shop-carts:v0.0.4
        name: carts
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: 512Mi
          requests:
            memory: 512Mi
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
      - emptyDir:
          medium: Memory
        name: tmp-volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: carts
  name: carts
  namespace: watchn
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    name: carts
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Type: preresolved
          URL: docker.io/niallthomson/shop-catalog:v0.0.4
        URL: docker.io/niallthomson/shop-catalog:v0.0.4
  labels:
    name: catalogue
  name: catalogue
  namespace: watchn
spec:
  replicas: 1
  selector:
    matchLabels:
      name: catalogue
  template:
    metadata:
      labels:
        fargate: "true"
        name: catalogue
    spec:
      containers:
      - env:
        - name: DB_ENDPOINT
          valueFrom:
            secretKeyRef:
              key: endpoint
              name: catalog-writer-db
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: catalog-writer-db
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: catalog-writer-db
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              key: name
              name: catalog-writer-db
        image: docker.io/niallthomson/shop-catalog:v0.0.4
        name: catalogue
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: catalogue
  name: catalogue
  namespace: watchn
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    name: catalogue
---
apiVersion: v1
data:
  endpoint: Y2F0YWxvZy1kYjozMzA2
  name: Y2F0YWxvZw==
  password: ZGVmYXVsdF9wYXNzd29yZA==
  username: Y2F0YWxvZ191c2Vy
kind: Secret
metadata:
  name: catalog-writer-db
  namespace: watchn
---
apiVersion: v1
data:
  endpoint: Y2F0YWxvZy1kYjozMzA2
  name: Y2F0YWxvZw==
  password: ZGVmYXVsdF9wYXNzd29yZA==
  username: Y2F0YWxvZ191c2Vy
kind: Secret
metadata:
  name: catalog-reader-db
  namespace: watchn
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Tag: "5.7"
          Type: resolved
          URL: mysql:5.7
        URL: index.docker.io/library/mysql@sha256:32f9d9a069f7a735e28fd44ea944d53c61f990ba71460c5c183e610854ca4854
  labels:
    name: catalogue-db
  name: catalogue-db
  namespace: watchn
spec:
  replicas: 1
  selector:
    matchLabels:
      name: catalogue-db
  template:
    metadata:
      labels:
        name: catalogue-db
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: my-secret-pw
        - name: MYSQL_DATABASE
          value: catalog
        - name: MYSQL_USER
          value: catalog_user
        - name: MYSQL_PASSWORD
          value: default_password
        image: index.docker.io/library/mysql@sha256:32f9d9a069f7a735e28fd44ea944d53c61f990ba71460c5c183e610854ca4854
        name: catalogue-db
        ports:
        - containerPort: 3306
          name: mysql
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: catalog-db
  name: catalog-db
  namespace: watchn
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    name: catalogue-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Type: preresolved
          URL: docker.io/niallthomson/shop-ui:v0.0.4
        URL: docker.io/niallthomson/shop-ui:v0.0.4
  labels:
    name: ui
  name: ui
  namespace: watchn
spec:
  replicas: 1
  selector:
    matchLabels:
      name: ui
  template:
    metadata:
      labels:
        fargate: "true"
        name: ui
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC
            -Djava.security.egd=file:/dev/urandom
        - name: ENDPOINTS_CATALOG
          value: http://catalogue:8080
        - name: ENDPOINTS_CARTS
          value: http://carts:8080
        - name: ENDPOINTS_ORDERS
          value: http://orders:8080
        image: docker.io/niallthomson/shop-ui:v0.0.4
        name: ui
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: 512Mi
          requests:
            memory: 512Mi
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
      - emptyDir:
          medium: Memory
        name: tmp-volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: ui
  name: ui
  namespace: watchn
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    name: ui
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Type: preresolved
          URL: docker.io/niallthomson/shop-orders:v0.0.4
        URL: docker.io/niallthomson/shop-orders:v0.0.4
  labels:
    name: orders
  name: orders
  namespace: watchn
spec:
  replicas: 1
  selector:
    matchLabels:
      name: orders
  template:
    metadata:
      labels:
        fargate: "true"
        name: orders
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -Xms128m -Xmx512m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC
            -Djava.security.egd=file:/dev/urandom
        - name: SERVER_TOMCAT_ACCESSLOG_ENABLED
          value: "true"
        - name: SPRING_PROFILES_ACTIVE
          value: mysql
        - name: SPRING_DATASOURCE_WRITER_URL
          valueFrom:
            secretKeyRef:
              key: url
              name: orders-writer-db
        - name: SPRING_DATASOURCE_WRITER_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: orders-writer-db
        - name: SPRING_DATASOURCE_WRITER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: orders-writer-db
        - name: SPRING_DATASOURCE_READER_URL
          valueFrom:
            secretKeyRef:
              key: url
              name: orders-reader-db
        - name: SPRING_DATASOURCE_READER_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: orders-reader-db
        - name: SPRING_DATASOURCE_READER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: orders-reader-db
        image: docker.io/niallthomson/shop-orders:v0.0.4
        name: orders
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: 512Mi
          requests:
            memory: 512Mi
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
      - emptyDir:
          medium: Memory
        name: tmp-volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: orders
  name: orders
  namespace: watchn
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    name: orders
---
apiVersion: v1
data:
  password: ZGVmYXVsdF9wYXNzd29yZA==
  url: amRiYzpteXNxbDovL29yZGVycy1kYjozMzA2L29yZGVycw==
  username: b3JkZXJzX3VzZXI=
kind: Secret
metadata:
  name: orders-writer-db
  namespace: watchn
---
apiVersion: v1
data:
  password: ZGVmYXVsdF9wYXNzd29yZA==
  url: amRiYzpteXNxbDovL29yZGVycy1kYjozMzA2L29yZGVycw==
  username: b3JkZXJzX3VzZXI=
kind: Secret
metadata:
  name: orders-reader-db
  namespace: watchn
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kbld.k14s.io/images: |
      - Metas:
        - Tag: "5.7"
          Type: resolved
          URL: mysql:5.7
        URL: index.docker.io/library/mysql@sha256:32f9d9a069f7a735e28fd44ea944d53c61f990ba71460c5c183e610854ca4854
  labels:
    name: orders-db
  name: orders-db
  namespace: watchn
spec:
  replicas: 1
  selector:
    matchLabels:
      name: orders-db
  template:
    metadata:
      labels:
        name: orders-db
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: my-secret-pw
        - name: MYSQL_DATABASE
          value: orders
        - name: MYSQL_USER
          value: orders_user
        - name: MYSQL_PASSWORD
          value: default_password
        image: index.docker.io/library/mysql@sha256:32f9d9a069f7a735e28fd44ea944d53c61f990ba71460c5c183e610854ca4854
        name: orders-db
        ports:
        - containerPort: 3306
          name: mysql
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: orders-db
  name: orders-db
  namespace: watchn
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    name: orders-db
