#@ load("@ytt:data", "data")

version: '2'

services:
  ui:
    cap_add:
    - NET_BIND_SERVICE
    cap_drop:
    - all
    ports:
    - 80:8080
    environment:
    - JAVA_OPTS=-Xms64m -Xmx256m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
    - ENDPOINTS_CATALOG=http://catalogue:8080
    - ENDPOINTS_CARTS=http://carts:8080
    hostname: ui
    image: #@ data.values.ui.image
    read_only: true
    restart: always
  catalogue:
    image: #@ data.values.catalog.image
    hostname: catalogue
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
  catalog-db:
      image: mysql:5.7
      hostname: catalog-db
      restart: always
      environment:
        - reschedule=on-node-failure
        - MYSQL_ROOT_PASSWORD=my-secret-pw
        - MYSQL_ALLOW_EMPTY_PASSWORD=true
        - MYSQL_DATABASE=watchndb
        - MYSQL_USER=catalog_user
        - MYSQL_PASSWORD=default_password
  carts:
    image: #@ data.values.cart.image
    hostname: carts
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - JAVA_OPTS=-Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
      - SERVER_TOMCAT_ACCESSLOG_ENABLED=true
      - SPRING_PROFILES_ACTIVE=dynamodb
      - AMAZON_DYNAMODB_endpoint=http://carts-db:8000
      - AWS_ACCESS_KEY_ID=key
      - AWS_SECRET_ACCESS_KEY=secret
  carts-db:
    image: amazon/dynamodb-local:1.13.1
    hostname: carts-db
    restart: always
    cap_drop:
      - all
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - reschedule=on-node-failure
  orders:
    image: #@ data.values.orders.image
    hostname: orders
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - JAVA_OPTS=-Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
  orders-db:
    image: mongo:3.4
    hostname: orders-db
    restart: always
    cap_drop:
      - all
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
  shipping:
    image: weaveworksdemos/shipping:0.4.8
    hostname: shipping
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - JAVA_OPTS=-Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
  queue-master:
    image: weaveworksdemos/queue-master:0.3.1
    hostname: queue-master
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
  rabbitmq:
    image: rabbitmq:3.6.8
    hostname: rabbitmq
    restart: always
    cap_drop:
      - all
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
      - NET_BIND_SERVICE
    read_only: true